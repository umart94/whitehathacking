sudo apt update
sudo apt-get update


sudo apt install apache2

cd /etc/apache2/sites-enabled/

edit 000-default.conf

sudo ifconfig -a


we will put our ip address
ServerName 192.168.100.137:80
this will help us when errors are generated
it will show us the name of the current machine in errors.

sudo apache2ctl restart

-----------------------

apache has a base executable, serving webcontent,
for supporting php language it has module.
default set of modules installed. that are loaded.

we want to enable the php module.

first , we need to install php 

sudo apt install php
then

cd /etc/apache2/mods-enabled

there are two files here
php7.4.conf
php7.4.load

if file matches .php or any extension used by php
set handler application/x-httpd-php

mime type will be handled by php module.


You can use a2enmod or a2dismod to enable/disable modules by name.

From terminal, run: sudo a2enmod php5 to enable PHP5 (or some other module), then sudo service apache2 reload to reload the Apache2 configuration.

If anyone gets

ERROR: Module phpX.X does not exist!

just install the module for your current php version:

apt-get install libapache2-mod-phpX.X


--------------------------------

sudo apt-get install wordpress

they get downloaded into

/usr/share/wordpress

copy them to webserver ( apache2) /var/www.

Summary: Site admins usually place sites in /var/www/site.com and there may be sensitive data in /var/www that should not be made available via a web server. All web servers on Debian have been updated to use /var/www/html as default instead of /var/www.


sudo cp -Rf /usr/share/wordpress /var/www (this will only copy the files)

instead , create a symbolic link..

sudo ln -s /usr/share/wordpress/ /var/www/wordpress


now configure wordpress config

cd /etc/wordpress


create database wordpress
CREATE USER 'newuser'@'localhost' IDENTIFIED BY 'password';
grant all on wordpress.* to newuser@localhost;







we can either download wordpress directory

in ubuntu we can have multiple wordpress installations

go to 

cd /etc/wordpress
sudo touch config-192.168.100.137.php

-----------------------

Create Apache site for WordPress. Create /etc/apache2/sites-available/wordpress.conf with following lines:

Alias /blog /usr/share/wordpress
<Directory /usr/share/wordpress>
    Options FollowSymLinks
    AllowOverride Limit Options FileInfo
    DirectoryIndex index.php
    Order allow,deny
    Allow from all
</Directory>
<Directory /usr/share/wordpress/wp-content>
    Options FollowSymLinks
    Order allow,deny
    Allow from all
</Directory>
Then, enable this site with sudo a2ensite wordpress, enable URL rewriting with sudo a2enmod rewrite and reload apache2 with sudo service apache2 reload.




To configure WordPress, we need to create MySQL database. Let’s do it!

$ sudo mysql -u root
Welcome to the MySQL monitor.  Commands end with ; or \g.
Your MySQL connection id is 7
Server version: 5.7.20-0ubuntu0.16.04.1 (Ubuntu)

Copyright (c) 2000, 2017, Oracle and/or its affiliates. All rights reserved.

Oracle is a registered trademark of Oracle Corporation and/or its
affiliates. Other names may be trademarks of their respective
owners.

Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.

mysql> CREATE DATABASE wordpress;
Query OK, 1 row affected (0,00 sec)

mysql> GRANT SELECT,INSERT,UPDATE,DELETE,CREATE,DROP,ALTER
    -> ON wordpress.*
    -> TO wordpress@localhost
    -> IDENTIFIED BY '<your-password>';
Query OK, 1 row affected (0,00 sec)

mysql> FLUSH PRIVILEGES;
Query OK, 1 row affected (0,00 sec)

mysql> quit
Bye








Now, let’s configure WordPress to use this database. Open /etc/wordpress/config-localhost.php and write:

<?php
define('DB_NAME', 'wordpress');
define('DB_USER', 'wordpress');
define('DB_PASSWORD', '<your-password>');
define('DB_HOST', 'localhost');
define('DB_COLLATE', 'utf8_general_ci');
define('WP_CONTENT_DIR', '/usr/share/wordpress/wp-content');
?>
Enable MySQL with sudo service mysql start.











# Sets the default security model of the Apache2 HTTPD server. It does
# not allow access to the root filesystem outside of /usr/share and /var/www.
# The former is used by web applications packaged in Debian,
# the latter may be used for local directories served by the web server. If
# your system is serving content from a sub-directory in /srv you must allow
# access here, or in any related virtual host.
<Directory />
        Options FollowSymLinks
        AllowOverride None
        Require all denied
</Directory>

<Directory /usr/share>
        AllowOverride None
        Require all granted
</Directory>

<Directory /var/www/>
        Options Indexes FollowSymLinks
        AllowOverride all
        Require all granted
</Directory>




sudo mv config-localhost.php config-192.168.100.137.php
wordpress wants a config-ipaddress version, since we added the ip address inside config file ( server name)

also
the alias is where we would go
localhost/wordpress
localhost/blog

this will include the config. for wordpress ( db name pwd etc)




